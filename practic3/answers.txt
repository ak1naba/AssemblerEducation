проверял тут - https://onecompiler.com/assembly/

1. Какое место занимает цифровой логический уровень в иерархии архитектуры ЭВМ?
Цифровой логический уровень занимает одно из самых низких мест в иерархии архитектуры ЭВМ. 
Он находится между уровнем электрических схем и уровнем микроархитектуры. Цифровой логический 
уровень отвечает за выполнение базовых логических операций, таких как И, ИЛИ, НЕ, которые 
являются основой для работы более сложных уровней архитектуры.

2. Почему в компьютерах используется двоичная система счисления, а не десятичная?
Простота реализации: Двоичная система легко реализуется с помощью электронных схем, так
как она использует только два состояния (0 и 1), которые могут быть представлены
как наличие или отсутствие напряжения.
Надежность: Двоичная система менее подвержена ошибкам, так как имеет только два состояния, 
в отличие от десятичной системы, которая имеет десять.
Универсальность: Двоичная система позволяет легко выполнять логические операции, которые 
являются основой для работы цифровых устройств.

3. Как двоичные состояния (0 и 1) связаны с физическими процессами в электронных устройствах?
Двоичные состояния (0 и 1) связаны с физическими процессами в электронных устройствах следующим образом:
0: Обычно представляется как отсутствие напряжения или низкий уровень напряжения.
1: Представляется как наличие напряжения или высокий уровень напряжения. Эти состояния могут 
быть реализованы с помощью различных физических процессов, таких как наличие или отсутствие 
электрического тока, магнитное состояние, оптическое состояние и т.д.

4. Что такое бит и какие значения он может принимать?
Бит (binary digit) — это минимальная единица информации в двоичной 
системе счисления. Бит может принимать одно из двух значений: 0 или 1. 
Эти значения используются для представления и обработки данных в 
цифровых устройствах.

5.Что такое таблица истинности и для чего она используется?
Таблица истинности — это таблица, которая показывает все возможные 
комбинации входных значений логической функции и соответствующие 
выходные значения. Она используется для анализа и проектирования 
логических схем, а также для проверки правильности работы логических 
операций. Таблица истинности помогает визуализировать, как логическая 
функция работает для всех возможных входных данных.

6. Перечислите основные логические операции (И, ИЛИ, НЕ) 
и объясните их назначение.
И (AND): Возвращает 1, только если оба входных значения равны 1. 
В противном случае возвращает 0.
Пример: 1 AND 1 = 1, 1 AND 0 = 0.
ИЛИ (OR): Возвращает 1, если хотя бы один из входных значений равен 1. 
В противном случае возвращает 0.
Пример: 1 OR 0 = 1, 0 OR 0 = 0.
НЕ (NOT): Инвертирует входное значение. Если входное значение равно 1,
то выходное значение будет 0, и наоборот.
Пример: NOT 1 = 0, NOT 0 = 1.